<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd"> 
<mapper namespace="com.hotent.platform.model.bpm.TaskComment">
	<resultMap id="TaskComment" type="com.hotent.platform.model.bpm.TaskComment">
		<id property="commentId" column="commentId" jdbcType="NUMERIC"/>
		<result property="actDefId" column="actDefId" jdbcType="VARCHAR"/>
		<result property="runId" column="runId" jdbcType="NUMERIC"/>
		<result property="authorId" column="authorId" jdbcType="NUMERIC"/>
		<result property="author" column="author" jdbcType="VARCHAR"/>
		<result property="commentTime" column="commentTime" jdbcType="DATE"/>
		<result property="content" column="content" jdbcType="VARCHAR"/>
		<result property="nodeName" column="nodeName" jdbcType="VARCHAR"/>
		<result property="taskId" column="taskId" jdbcType="NUMERIC"/>
	</resultMap>
	
	<sql id="columns">
		commentId,actDefId,runId,authorId,author,commentTime,content,nodeName,taskId
	</sql>
	
	<sql id="dynamicWhere">
		<where>
			<if test="@Ognl@isNotEmpty(commentId)"> AND commentId  =#{commentId} </if>
			<if test="@Ognl@isNotEmpty(actDefId)"> AND actDefId  LIKE #{actDefId}  </if>
			<if test="@Ognl@isNotEmpty(runId)"> AND runId  =#{runId} </if>
			<if test="@Ognl@isNotEmpty(authorId)"> AND authorId  =#{authorId} </if>
			<if test="@Ognl@isNotEmpty(author)"> AND author  LIKE #{author}  </if>
			<if test="@Ognl@isNotEmpty(commentTime)"> AND commentTime  =#{commentTime} </if>
			<if test="@Ognl@isNotEmpty(content)"> AND content  LIKE #{content}  </if>
			<if test="@Ognl@isNotEmpty(nodeName)"> AND nodeName  LIKE #{nodeName}  </if>
			<if test="@Ognl@isNotEmpty(taskId)"> AND taskId  =#{taskId} </if>
		</where>
	</sql>

	<insert id="add" parameterType="com.hotent.platform.model.bpm.TaskComment">
		INSERT INTO BPM_TASK_COMMENT
		(commentId,actDefId,runId,authorId,author,commentTime,content,nodeName,taskId)
		VALUES
		(#{commentId,jdbcType=NUMERIC}, #{actDefId,jdbcType=VARCHAR}, #{runId,jdbcType=NUMERIC}, #{authorId,jdbcType=NUMERIC}, #{author,jdbcType=VARCHAR}, #{commentTime,jdbcType=DATE}, #{content,jdbcType=VARCHAR}, #{nodeName,jdbcType=VARCHAR}, #{taskId,jdbcType=NUMERIC})
	</insert>
	
	<delete id="delById" parameterType="java.lang.Long">
		DELETE FROM BPM_TASK_COMMENT 
		WHERE
		commentId=#{commentId}
	</delete>
	
	<update id="update" parameterType="com.hotent.platform.model.bpm.TaskComment">
		UPDATE BPM_TASK_COMMENT SET
		actDefId=#{actDefId,jdbcType=VARCHAR} , 
		runId=#{runId,jdbcType=NUMERIC} , 
		authorId=#{authorId,jdbcType=NUMERIC} , 
		author=#{author,jdbcType=VARCHAR} , 
		commentTime=#{commentTime,jdbcType=DATE} , 
		content=#{content,jdbcType=VARCHAR} , 
		nodeName=#{nodeName,jdbcType=VARCHAR} , 
		taskId=#{taskId,jdbcType=NUMERIC} 
		WHERE
		commentId=#{commentId}
	</update>
	
	<select id="getById" parameterType="java.lang.Long" resultMap="TaskComment">
		SELECT <include refid="columns"/>
		FROM BPM_TASK_COMMENT
		WHERE
		commentId=#{commentId}
	</select>
	
	<select id="getAll" resultMap="TaskComment">
		SELECT <include refid="columns"/>
		FROM BPM_TASK_COMMENT   
		<include refid="dynamicWhere" />
		<if test="@Ognl@isNotEmpty(orderField)">
		order by ${orderField} ${orderSeq}
		</if>
		<if test="@Ognl@isEmpty(orderField)">
		order by commentId  desc
		</if>
	</select>
</mapper>
